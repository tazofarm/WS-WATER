{"ast":null,"code":"// Data import관리\nimport data3 from './assets/database3.js';\n// document.getElementById().innerHTML = ?? // 데이터 바인딩 JS 데이터를 HTML에 꽂아 넣음\n\n// Data export 관리\nexport default {\n  name: 'App',\n  data()\n  // 데이터는 objct\n  {\n    return {\n      database3: data3 // 외부데이터 import (tot data)\n    };\n  },\n\n  // 함수관리\n  methods: {\n    countaa() {\n      this.신고수++;\n    },\n    markers() {\n      // ------------ 마커 -----------\n      var i;\n      var position = new naver.maps.LatLng(data3[i].positonx, data3[i].positony);\n      var marker = new naver.maps.Marker({\n        position: position[i],\n        map: map\n      });\n      var infowindow = new naver.maps.InfoWindow({\n        content: 'data3[i].name1+\" \"+data3[i].name2',\n        position: position[i],\n        map: map\n      });\n      infowindow[i].open(map, marker);\n      naver.maps.Event.addListener(marker0, \"click\", function (e) {\n        if (infowindow[i].getMap()) {\n          infowindow[i].close();\n        } else {\n          infowindow0.open(map, marker[i]);\n        }\n      });\n    }\n  },\n  components: {}\n};","map":{"version":3,"names":["data3","name","data","database3","methods","countaa","신고수","markers","i","position","naver","maps","LatLng","positonx","positony","marker","Marker","map","infowindow","InfoWindow","content","open","Event","addListener","marker0","e","getMap","close","infowindow0","components"],"sources":["D:\\_00Work\\vue\\vuetest\\src\\App.vue"],"sourcesContent":["<!-- template Start -->\n<template>\n\n<!-- 네이버지도 -->\n<img src = \"./assets/logo.png\" class = \"room-img\">\n            <div id=\"map\" style=\" width:100%;height:250px;\"></div>\n        <script>\n            var map = new naver.maps.Map('map', {\n            center: new naver.maps.LatLng(36.4920492,128.2342177),\n            zoom: 15\n            });\n            map.setMapTypeId(naver.maps.MapTypeId.HYBRID);\n\n        </script><br>\n<br><br>\n\n<!-- 기능버튼 -->\n<input type = \"button\" value = \"추가\">\n<input type = \"button\" value = \"삭제\">\n<input type = \"button\" value = \"열기\">\n<input type = \"button\" value = \"닫기\">\n<input type = \"button\" value = \"설정\">\n<br><br>\n\n\n<!-- 표만들기 -->\n<table border=\"1px\">\n  <th><input type =\"checkbox\"></th>\n  <th>구분</th>\n  <th>이름</th>\n  <th>넓이<br>/종자</th>\n  <th>설정값</th>\n  <th>상태</th>\n  <th>설정</th>\n  <th>비고</th>\n\n  <tbody id = \"mytable\"></tbody>\n</table>\n<!-- 표만들기 end -->\n\n</template>\n<!-- template end -->\n\n\n<!-- Script start -->\n<script>\n// Data import관리\nimport data3 from './assets/database3.js'; \n// document.getElementById().innerHTML = ?? // 데이터 바인딩 JS 데이터를 HTML에 꽂아 넣음\n\n// Data export 관리\nexport default {\n  name: 'App',\n  data() // 데이터는 objct\n  {     \n    return {\n      database3 : data3, // 외부데이터 import (tot data)\n           }\n  },\n\n\n// 함수관리\n  methods :{\n    countaa(){\n      this.신고수++;\n        },\n    markers(){\n              // ------------ 마커 -----------\n        var i;\n        var position = new naver.maps.LatLng(data3[i].positonx,data3[i].positony);\n        var marker = new naver.maps.Marker({\n        position: position[i],\n        map: map,\n        });\n        var infowindow = new naver.maps.InfoWindow({\n        content: 'data3[i].name1+\" \"+data3[i].name2',\n        position: position[i],\n        map : map\n        });\n        infowindow[i].open(map, marker);\n\n        naver.maps.Event.addListener(marker0, \"click\", function(e) {\n        if (infowindow[i].getMap()) {\n        infowindow[i].close();\n        } else {\n        infowindow0.open(map, marker[i]);\n        }\n        });\n\n    }\n\n  },\n\n  components: {\n\n  }\n}\n</script>\n<!-- Script end -->\n\n<!-- Style start -->\n<style>\n.black-bg {\n  width : 100%; height :100%;\n  background : rgba(0,0,0,0,5);\n  position : fixed; padding : 20px;\n}\n\n .white-bg {\n  width : 100%;\n  background : white(0,0,0,0,5);\n  border-radius : 8px; \n  padding : 20px;\n \n}\n\n.room-img{\n  width : 40%;\n  margin-top : 10px;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  /* margin-top: 10px; */\n}\n\n.menu{\n  background : darkslateblue;\n  padding : 15px;\n  border-radius : 10px;\n}\n\n.menu a {\ncolor : white;\npadding : 10px;\n}\n\n\n\n\n</style>\n<!-- Style end -->"],"mappings":"AA8CA;AACA,OAAOA,KAAI,MAAO,uBAAuB;AACzC;;AAEA;AACA,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA;EAAG;EACP;IACE,OAAO;MACLC,SAAQ,EAAIH,KAAK,CAAE;IACd;EACT,CAAC;;EAGH;EACEI,OAAM,EAAG;IACPC,OAAOA,CAAA,EAAE;MACP,IAAI,CAACC,GAAG,EAAE;IACR,CAAC;IACLC,OAAOA,CAAA,EAAE;MACC;MACN,IAAIC,CAAC;MACL,IAAIC,QAAO,GAAI,IAAIC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACZ,KAAK,CAACQ,CAAC,CAAC,CAACK,QAAQ,EAACb,KAAK,CAACQ,CAAC,CAAC,CAACM,QAAQ,CAAC;MACzE,IAAIC,MAAK,GAAI,IAAIL,KAAK,CAACC,IAAI,CAACK,MAAM,CAAC;QACnCP,QAAQ,EAAEA,QAAQ,CAACD,CAAC,CAAC;QACrBS,GAAG,EAAEA;MACL,CAAC,CAAC;MACF,IAAIC,UAAS,GAAI,IAAIR,KAAK,CAACC,IAAI,CAACQ,UAAU,CAAC;QAC3CC,OAAO,EAAE,mCAAmC;QAC5CX,QAAQ,EAAEA,QAAQ,CAACD,CAAC,CAAC;QACrBS,GAAE,EAAIA;MACN,CAAC,CAAC;MACFC,UAAU,CAACV,CAAC,CAAC,CAACa,IAAI,CAACJ,GAAG,EAAEF,MAAM,CAAC;MAE/BL,KAAK,CAACC,IAAI,CAACW,KAAK,CAACC,WAAW,CAACC,OAAO,EAAE,OAAO,EAAE,UAASC,CAAC,EAAE;QAC3D,IAAIP,UAAU,CAACV,CAAC,CAAC,CAACkB,MAAM,EAAE,EAAE;UAC5BR,UAAU,CAACV,CAAC,CAAC,CAACmB,KAAK,EAAE;QACrB,OAAO;UACPC,WAAW,CAACP,IAAI,CAACJ,GAAG,EAAEF,MAAM,CAACP,CAAC,CAAC,CAAC;QAChC;MACA,CAAC,CAAC;IAEN;EAEF,CAAC;EAEDqB,UAAU,EAAE,CAEZ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}